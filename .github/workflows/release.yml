name: Build and Release

on:
  push:
    tags:
      - 'v1.0.0' # 当推送符合vX.X.X模式的标签时触发

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Build
        run: |
          GOOS=${{ matrix.os == 'ubuntu-latest' && echo 'linux' || ( matrix.os == 'macos-latest' && echo 'darwin' || echo 'windows' ) }}
          GOARCH=amd64
          EXT=${{ matrix.os == 'windows-latest' && echo '.exe' || echo '' }}
          go build -o gfdown-$GOOS-$GOARCH$EXT ./cmd/gfdown

      - name: Archive build artifacts
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os == 'ubuntu-latest' && echo 'linux' || ( matrix.os == 'macos-latest' && echo 'darwin' || echo 'windows' ) }}
          GOARCH=amd64
          EXT=${{ matrix.os == 'windows-latest' && echo '.exe' || echo '' }}
          mv gfdown-$GOOS-$GOARCH$EXT dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gfdown-${{ matrix.os }}
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: gfdown-ubuntu-latest
          path: dist/
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: gfdown-macos-latest
          path: dist/
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: gfdown-windows-latest
          path: dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/
          asset_name: gfdown-${{ github.ref_name }}.zip
          asset_content_type: application/zip
